# -*- coding: utf-8 -*-
"""Olá, este é o Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import pandas as pd

# carregar o dataset a partir do arquivo local
file_path = 'world_alcohol.csv'
df = pd.read_csv(file_path)

# a) agrupar os dados por tipo de bebidas
grupo_bebidas = df.groupby('Beverage Types')

# b) agrupar os dados por Região e por Ano
grupo_regiao_ano = df.groupby(['WHO region', 'Year'])

# c) seção de Contagens
contagem_regioes = df['WHO region'].value_counts()
contagem_paises = df['Country'].nunique()
soma_valores_bebida = grupo_bebidas['Display Value'].sum()

# d) análises estatísticas da coluna dos valores
media_valores_bebida = grupo_bebidas['Display Value'].mean()
moda_valores_bebida = grupo_bebidas['Display Value'].agg(pd.Series.mode)
mediana_valores_bebida = grupo_bebidas['Display Value'].median()
estatisticas_descritivas_valores_bebida = grupo_bebidas['Display Value'].describe()

# e) resultados de acordo com alguns critérios
crit1 = df[df['Year'] == 1985]['Beverage Types']
crit2 = df['WHO region'].value_counts() > 4

# resultados
print("a) agrupamento por tipo de bebida:")
print(grupo_bebidas.head(5))

print("\nb) agrupamento por Região e por Ano:")
print(grupo_regiao_ano.head(5))

print("\nc) seção de Contagens:")
print("contagem de Regiões:\n", contagem_regioes)
print("contagem de Países:", contagem_paises)
print("soma dos valores por Bebida:\n", soma_valores_bebida)

print("\nd) análises estatísticas da coluna dos valores:")
print("média dos valores por Bebida:\n", media_valores_bebida)
print("moda dos valores por Bebida:\n", moda_valores_bebida)
print("mediana dos valores por Bebida:\n", mediana_valores_bebida)
print("estatísticas Descritivas dos valores por Bebida:\n", estatisticas_descritivas_valores_bebida)

print("\ne) resultados de acordo com alguns critérios:")
print("i) coluna de bebidas do ano de 1985:\n", crit1)
print("ii) coluna de Região com valores acima de 4:\n", crit2)

import pandas as pd

# carregar o dataset a partir do endereço do github
file_url = 'https://raw.githubusercontent.com/LuanSalles/-NF3-BIG-DATA-LuanSalles/main/cursos-prouni.csv'
df = pd.read_csv(file_url)

# a) efetuar a limpeza das colunas de notas
df['nota_integral_ampla'].fillna(0.0, inplace=True)
df['nota_integral_cotas'].fillna(0.0, inplace=True)
df['nota_parcial_ampla'].fillna(0.0, inplace=True)
df['nota_parcial_cotas'].fillna(0.0, inplace=True)

# b) agrupar os dados pelo grau
grupo_grau = df.groupby('grau')

# c) agrupar os dados pelos cursos de matematica, medicina e pedagogia
cursos_interesse = ['Matemática', 'Medicina', 'Pedagogia']
grupo_cursos = df[df['curso_busca'].isin(cursos_interesse)].groupby('curso_busca')

# d) agrupar os dados por estado e obter a media de notas de corte por estado
media_notas_estado = df.groupby('uf_busca')['nota_integral_cotas'].mean()

# e) agrupar os dados pelos cursos tecnologicos
grupo_tecnologicos = df[df['grau'] == 'Tecnológico'].groupby('curso_busca')

# f) eliminar a coluna cidade_filtro do dataframe
df.drop('cidade_filtro', axis=1, inplace=True)

# g) media das mensalidades dos cursos de medicina
media_mensalidades_medicina = df[df['curso_busca'] == 'Medicina']['mensalidade'].mean()

# h) media das notas de corte dos cursos de tempo integral
media_notas_integral = df[df['turno'] == 'Integral']['nota_integral_ampla'].mean()

# i) estatistica descritiva
estatisticas_bacharelado = df[df['grau'] == 'Bacharelado']['nota_integral_ampla'].describe()

# j) grafico comparativo
df.groupby('grau')['nota_integral_cotas'].mean().plot(kind='bar')

# resultados
print("Média das mensalidades dos cursos de Medicina:", media_mensalidades_medicina)
print("Média das notas de corte dos cursos de tempo integral:", media_notas_integral)
print("Estatística Descritiva das Notas Integral Ampla dos cursos de Bacharelado:")
print(estatisticas_bacharelado)

print(df.columns)